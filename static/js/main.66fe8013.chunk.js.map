{"version":3,"sources":["images/mainlogo.png","List.jsx","Footer.jsx","Msl.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","line","setLine","className","onClick","style","textDecoration","color","text","Footer","Msl","item","setItem","newItem","setNewItem","src","logo","alt","type","placeholder","value","onChange","event","target","Button","prevValue","alert","map","val","index","Tooltip","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,MAA0B,qC,iCCuB1BA,MAnBf,SAAcC,GACd,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAII,OACI,mCACA,sBAAKC,UAAU,YAAf,UACA,sBAAMC,QANA,WACVF,GAAQ,IAKJ,SACI,cAAC,IAAD,CAAiBC,UAAU,kBAE/B,oBAAIE,MAAO,CAACC,eAAeL,EAAM,eAAe,OAC5CM,MAAON,EAAO,QAAU,SAD5B,SACuCF,EAAMS,a,0BCdtC,SAASC,IACpB,OACI,qBAAKN,UAAU,SAAf,SACM,kD,qBCuDCO,MAnDf,WACQ,MAAwBV,mBAAS,IAAjC,mBAAOW,EAAP,KAAaC,EAAb,KACA,EAA8BZ,mBAAS,IAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KAkBJ,OAGI,mCACA,sBAAKX,UAAU,WAAf,UACI,qBAAKA,UAAU,SAAf,SACA,qBAAKY,IAAKC,EAAMC,IAAI,WAGpB,sBAAKd,UAAU,YAAf,UACA,kDACA,sBAAKA,UAAU,aAAf,UACI,uBAAOe,KAAK,OAAOC,YAAY,eAAeC,MAAOT,EAAMU,SA7BnD,SAACC,GACbV,EAAQU,EAAMC,OAAOH,UA6BjB,cAACI,EAAA,EAAD,CAASjB,MAAM,UAAUH,QA3Bb,WACJ,KAATO,EACCG,GAAW,SAACW,GACZ,MAAM,GAAN,mBAAWA,GAAX,CAAsBd,OAItBe,MAAM,uBAEVd,EAAQ,KAkBJ,SAA+C,cAAC,IAAD,SAEnD,qBAAKT,UAAU,OAAf,SACMU,EAAQc,KAAI,SAACC,EAAKC,GAChB,OAAO,cAAC,EAAD,CAAkBrB,KAAMoB,GAAbC,QAG1B,qBAAK1B,UAAU,YAAf,SACI,cAAC2B,EAAA,EAAD,CAASC,MAAM,YAAf,SACA,cAACP,EAAA,EAAD,CAASpB,QAzBA,WACfU,EAAW,KAwBuBP,MAAM,UAAlC,SAA6C,cAAC,IAAD,aAIjD,cAACE,EAAD,UC5CGuB,MARf,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,OCMS8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.66fe8013.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mainlogo.672ae21f.png\";","import React,{useState} from 'react'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\n\r\n\r\nfunction List(props){\r\nconst [line, setLine] = useState(false);\r\nconst cutIt = () => {\r\n    setLine(true);\r\n}\r\n    return(\r\n        <>\r\n        <div className=\"list_icon\">\r\n        <span onClick={cutIt}>\r\n            <CheckCircleIcon className=\"completebtn\"/>\r\n        </span>\r\n        <li style={{textDecoration:line? \"line-through\":\"none\",\r\n            color: line ? \"green\" : \"black\"}}>{props.text}</li>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List;","\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n              <h4>Â© 2021 Arun\r\n              </h4>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport logo from './images/mainlogo.png';\r\nimport Button from '@mui/material/Button';\r\nimport List from './List';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Footer from './Footer';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nfunction Msl(){\r\n        const [item, setItem] = useState(\"\");\r\n        const [newItem, setNewItem] = useState([]);\r\n        const addItem = (event) => {\r\n            setItem(event.target.value);\r\n        };\r\n        const listOfItems = () => {\r\n            if(item !== \"\"){\r\n                setNewItem((prevValue) => {\r\n                return [...prevValue, item]\r\n            });\r\n            }\r\n            else(\r\n                alert(\"Please, Add an Item\")\r\n            )\r\n            setItem(\"\")\r\n        };\r\n        const clearAll = () =>{\r\n          setNewItem([])\r\n        }\r\n    return(\r\n\r\n        \r\n        <>\r\n        <div className=\"main_div\">\r\n            <div className=\"header\">\r\n            <img src={logo} alt=\"Logo\"></img>\r\n            \r\n            </div>\r\n            <div className=\"inner_div\">\r\n            <h1>My Shopping List</h1>\r\n            <div className=\"inner_div1\">\r\n                <input type=\"text\" placeholder=\"Add an Items\" value={item} onChange={addItem} />\r\n                <Button  color=\"primary\" onClick={listOfItems}><AddCircleIcon/></Button>\r\n            </div>\r\n            <div className=\"list\">\r\n                { newItem.map((val, index)=>{\r\n                    return <List key={index} text={val}/>;\r\n                })}\r\n            </div>\r\n            <div className=\"clear_all\">\r\n                <Tooltip title=\"Clear All\">\r\n                <Button  onClick={clearAll} color=\"primary\" ><DeleteForeverIcon/></Button>\r\n                </Tooltip>\r\n            </div>\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\nexport default Msl;","import './App.css';\nimport Msl from './Msl';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Msl/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}